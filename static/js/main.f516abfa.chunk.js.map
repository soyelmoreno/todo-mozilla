{"version":3,"sources":["components/usePrevious.js","components/Todo.js","components/FilterButton.js","components/Form.js","App.js","index.js"],"names":["usePrevious","value","ref","useRef","useEffect","current","Todo","props","useState","isEditing","setIsEditing","newName","setNewName","editFieldRef","editButtonRef","wasEditing","editingTemplate","className","onSubmit","e","preventDefault","onEditTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","onToggleTaskCompleted","onDeleteTask","focus","FilterButton","aria-pressed","isPressed","onFilter","Form","setName","autoComplete","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","setFilter","toggleTaskCompleted","updatedTasks","map","deleteTask","remainingTasks","editTask","editedTaskList","taskList","key","filterList","taskNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f516abfa.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\n// A custom hook to get the previous state to compare to the current one\nexport default function usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport usePrevious from \"./usePrevious\";\n\n// The main Todo function\nexport default function Todo(props) {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newName, setNewName] = useState(\"\");\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n  const wasEditing = usePrevious(isEditing);\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (newName) {\n      props.onEditTask(props.id, newName);\n      setNewName(\"\");\n      setIsEditing(false);\n    }\n  }\n\n  function handleCancel() {\n    setIsEditing(false);\n    setNewName(\"\");\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          type=\"text\"\n          id={props.id}\n          className=\"todo-text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => handleCancel()}>\n          Cancel\n          <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.onToggleTaskCompleted(props.id)}\n        />\n        <label className=\"todo-label\" htmlFor=\"todo-0\">\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setIsEditing(true)}\n          ref={editButtonRef}>\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.onDeleteTask(props.id)}>\n          Delete <span className=\"visually-hidden\">Eat</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  // useEffect() takes a function as an argument; this function is executed after the component renders.\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.onFilter(props.name)}>\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;\n","import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (name) {\n      props.onSubmit(name);\n      setName(\"\");\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Todo from \"./components/Todo\";\nimport FilterButton from \"./components/FilterButton\";\nimport Form from \"./components/Form\";\nimport { nanoid } from \"nanoid\";\nimport usePrevious from \"./components/usePrevious\";\n\n// Each key is the name of a filter, each value is a function that filters\nconst FILTER_MAP = {\n  All: () => true, // Show all tasks\n  Active: (task) => !task.completed, // Show tasks whose `completed` prop is `false`\n  Completed: (task) => task.completed, // Show tasks whose `completed` prop is `true`\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState(\"All\");\n\n  function addTask(name) {\n    const newTask = {\n      id: `todo-${nanoid(5)}`,\n      name: name,\n      completed: false,\n    };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // Use object spread to make a new object whole `completed` prop has\n        // been inverted\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map((task) => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        onToggleTaskCompleted={toggleTaskCompleted}\n        onDeleteTask={deleteTask}\n        onEditTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      onFilter={setFilter}\n    />\n  ));\n\n  const taskNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${taskNoun} remaining`;\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form onSubmit={addTask} />\n      <div className=\"filters btn-group stack-exception\">{filterList}</div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      {/* eslint-disable-next-line */}\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Eat\", completed: true },\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\n  { id: \"todo-2\", name: \"Repeat\", completed: false },\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}